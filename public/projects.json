[
    {
        "id": 1,
        "name": "SwiftParcel",
        "description": "SwiftParcel is a full-stack application built using the MERN stack to manage parcel deliveries. This system enables users to book parcels, admins to assign deliveries, and delivery personnel to manage their deliveries efficiently. The app features role-based access, responsive design, advanced form handling, secure authentication, and real-time data operations.",
        "technologies": [
            "React",
            "Node.js",
            "Express",
            "MongoDB",
            "Stripe"
        ],
        "projectGoals": [
            "Enable users to book and track parcel deliveries",
            "Allow admin to manage bookings, users, and deliverymen",
            "Provide real-time statistics and performance metrics",
            "Enhance user engagement with reviews and ratings",
            "Ensure a secure, scalable, and responsive experience"
        ],
        "features": [
            "Role-based access: User, Delivery Men, Admin",
            "JWT-based secure private routes (stored in localStorage)",
            "Parcel booking form with real-time price calculation",
            "Admin panel to assign deliverymen and update booking statuses",
            "Delivery dashboard with parcel delivery management",
            "Stripe integration for parcel payments",
            "Real-time parcel stats with MongoDB aggregation",
            "Parcel review system with ratings and feedback",
            "Map-based parcel location viewer using React Leaflet",
            "Pagination, search, and filtering in admin dashboards",
            "Custom animations and Shadcn UI library used throughout"
        ],
        "challengesFaced": [
            "Managing real-time state updates in multi-role dashboards",
            "Dashboard mongodb aggregation"
        ],
        "potentialImprovements": [
            "Better UX with custom alerts, toasts, and form validation",
            "Atomic & Modular Architecture",
            "Advanced MongoDB Aggregation for Real-time Insights",
            "Interactive Location Intelligence"
        ],
        "image": "https://i.ibb.co/fVCcRj5J/Swift-Parcel.png",
        "liveLink": "https://swiftparcel-a0316.web.app",
        "repoLink": "https://github.com/habibchy947/SwiftParcel-Client"
    },
    {
        "id": 2,
        "name": "DineWise",
        "description": "A full-stack application built with the MERN Stack for managing restaurant operations. It includes features like user authentication, food management, a responsive design, and a purchasing system with JWT authentication.",
        "technologies": [
            "React",
            "Node.js",
            "Express",
            "MongoDB"
        ],
        "projectGoals": [
            "Allow users to register and log in",
            "Create CRUD operations for posts",
            "Enable user comments on posts"
        ],
        "features": [
            "Fully responsive on mobile, tablet, and desktop devices",
            "Authentication system with email/password login and social login (Google or GitHub)",
            "JWT authentication for securing private routes",
            "Food purchasing system with quantity management and purchase button disabled when out of stock",
            "Search functionality for food items",
            "Add and manage food items for staff with an admin panel",
            "User profile section with image upload and editable details",
            "Order management for users with the ability to view and delete orders",
            "Gallery page with interactive images using lightbox",
            "Theme toggling (light/dark mode) for user preference"
        ],
        "challengesFaced": [
            "Proper JWT Handling"
        ],
        "potentialImprovements": [
            "Performance Optimization",
            "Role based access control",
            "Advanced search and filtering"
        ],
        "image": "https://i.ibb.co.com/dGCrkhG/dinewise.png",
        "liveLink": "https://dinewise-6e5a1.web.app",
        "repoLink": "https://github.com/Jihanchy/Dinewise-Client"
    },
    {
        "id": 3,
        "name": "Sportify",
        "description": "Sportify is a responsive e-commerce platform for buying and managing sports equipment, built with the MERN Stack. It allows users to browse, purchase, and manage sports gear while providing a seamless shopping experience.",
        "technologies": [
            "React",
            "Node.js",
            "Express",
            "MongoDB",
            "Firebase",
            "JWT"
        ],
        "projectGoals": [
            "Allow users to register and log in with email/password and third-party authentication",
            "Support CRUD operations for sports equipment (Add, View, Update, Delete)",
            "Ensure full responsiveness across all devices",
            "Secure user data and Firebase/MongoDB credentials using environment variables",
            "Implement JWT for private route authentication"
        ],
        "features": [
            "Navbar with dynamic login/logout based on user authentication",
            "Home page with banner, sports categories, and featured products",
            "Add Equipment form (private route) for logged-in users to add new products",
            "Sports Equipment list with search and details view",
            "User-specific 'My Equipment List' for managing their added products",
            "Update and delete functionality for equipment",
            "Responsive and attractive design for mobile, tablet, and desktop views",
            "404 page for non-existing routes",
            "Loading spinner for data fetching"
        ],
        "challengesFaced": [
            "Implement sorting in backend"
        ],
        "potentialImprovements": [
            "Performance Optimization",
            "Adding micro-animatioin",
            "Admin dashboard"
        ],
        "image": "https://i.ibb.co.com/QNFFmJC/sportify-png.png",
        "liveLink": "https://sportify-fe915.web.app",
        "repoLink": "https://github.com/Jihanchy/Sportify-client"
    }
]



